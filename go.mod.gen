#!/usr/bin/env bash
set -e -o pipefail

docker_version=19.03.8
bad_pseudo_versions=( 
	github.com/containerd/containerd@v1.3.0-0.20190507210959-7c1e88399ec0
	golang.org/x/crypto@v0.0.0-20190129210102-0709b304e793
)

################################################################################

echo "[${0##*/}] Getting github.com/docker/cli commit hash..." >&2
docker_commit=$(curl -fL https://github.com/docker/cli.git/info/refs?service=git-upload-pack | awk "\$2 == \"refs/tags/v${docker_version}^{}\" {sub(/..../,\"\"); print \$1}")

echo "[${0##*/}] Getting github.com/docker/cli vendor.conf..." >&2
docker_vendorconf=$(curl -fL "https://raw.githubusercontent.com/docker/cli/v${docker_version}/vendor.conf")

echo "[${0##*/}] Generating go.mod..." >&2
cat <<EOF
// This file is generated by ./${0##*/} and possibly edited only by 'go build' and friends.
module github.com/datawire/docker-build-wrapper

go 1.13

require github.com/docker/cli ${docker_commit}

// The following is based on the above github.com/docker/cli version's vendor.conf
EOF

sed 's/#.*//' <<<"$docker_vendorconf" |
awk '

    BEGIN {
        split("", requires);
        split("", replaces);
    }

    NF == 2 {
        requires[length(requires)+1] = $1 " " $2;
    }

    NF == 3 {
        sub(/^.*:\/\//, "", $3);
        sub(/\.git$/, "", $3);
        replaces[length(replaces)+1] = $1 " => " $3 " " $2;
    }

    END {
        print "require (";
        for (i in requires) {
            print "\t" requires[i];
        }
        print ")";

        print "";

        print "replace (";
        for (i in replaces) {
            print "\t" replaces[i];
        }
        print ")";
    }

    '

echo
echo '// Fixup bad pseudo-versions'
echo 'replace ('
for dep in "${bad_pseudo_versions[@]}"; do
	printf '\t%s => %s %s\n' \
	       "${dep/'@'/ }" \
	       "${dep%%@*}" \
	       "${dep##*-}"
done
echo ')'

echo "[${0##*/}] Done" >&2
